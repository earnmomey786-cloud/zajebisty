@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  * {
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
  }
  
  body {
    touch-action: pan-y; /* permitir scroll vertical; horizontal lo controlamos en el componente */
    margin: 0;
    padding: 0;
    width: 100vw;
    min-height: 100vh;
  }
  
  html {
    width: 100vw;
    margin: 0;
    padding: 0;
  }
  
  #root {
    width: 100vw;
    min-height: 100vh;
    overflow-y: auto;
    height: 100vh;
    overscroll-behavior-y: contain;
  }
}

/* Asegurar que el contenedor principal permite el scroll */
  #root {
    overflow-y: auto;
    height: 100vh;
  }

/* Efecto glitch (andrew-demchenk0) adaptado para imágenes */
@layer components {
  .glitch {
    position: relative;
    z-index: 1;
    animation: shift 2s ease-in-out infinite alternate;
  }

  .glitch img {
    display: block;
    width: 100%;
    height: auto;
  }

  /* Capas superpuestas que simulan before/after del snippet original */
  .glitch img:nth-child(2),
  .glitch img:nth-child(3) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    opacity: 0.8;
    pointer-events: none;
  }

  /* Capa magenta (equivalente a :before) */
  .glitch img:nth-child(2) {
    filter: hue-rotate(280deg) saturate(2.5) brightness(1.1);
    animation: glitch 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
    z-index: -1;
    mix-blend-mode: screen;
  }

  /* Capa verde (equivalente a :after) */
  .glitch img:nth-child(3) {
    filter: hue-rotate(120deg) saturate(2.5) brightness(1.1);
    animation: glitch 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both infinite;
    z-index: -2;
    mix-blend-mode: screen;
  }

  @keyframes glitch {
    0% { transform: translate(0); }
    20% { transform: translate(-3px, 3px); }
    40% { transform: translate(-3px, -3px); }
    60% { transform: translate(3px, 3px); }
    80% { transform: translate(3px, -3px); }
    100% { transform: translate(0); }
  }

  @keyframes shift {
    0%, 40%, 44%, 58%, 61%, 65%, 69%, 73%, 100% { transform: skewX(0deg); }
    41% { transform: skewX(10deg); }
    42% { transform: skewX(-10deg); }
    59% { transform: skewX(40deg) skewY(10deg); }
    60% { transform: skewX(-40deg) skewY(-10deg); }
    63% { transform: skewX(10deg) skewY(-5deg); }
    70% { transform: skewX(-50deg) skewY(-20deg); }
    71% { transform: skewX(10deg) skewY(-10deg); }
  }

  /* Sparkle Button Effect */
  .sparkle-button {
    --active: 0;
    --bg: radial-gradient(
      40% 50% at center 100%,
      hsl(270 calc(var(--active) * 97%) 72% / var(--active)),
      transparent
    ),
    radial-gradient(
      80% 100% at center 120%,
      hsl(260 calc(var(--active) * 97%) 70% / var(--active)),
      transparent
    ),
    hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
    background: var(--bg);
    font-size: 1.2rem;
    font-weight: 500;
    border: 0;
    cursor: pointer;
    padding: 1em 1em;
    display: flex;
    align-items: center;
    gap: 0.25em;
    white-space: nowrap;
    border-radius: 100px;
    position: relative;
    box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) hsl(260 97% 61% / 0.75),
      0 0em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
      0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
    transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
    scale: calc(1 + (var(--active) * 0.1));
    transition: .3s;
  }

  .sparkle-button:active {
    scale: 1;
    transition: .3s;
  }

  .sparkle path {
    color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
    transform-box: fill-box;
    transform-origin: center;
    fill: currentColor;
    stroke: currentColor;
    animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
    animation-duration: 0.6s;
    transition: color var(--transition);
  }

  .sparkle-button:is(:hover, :focus-visible) path {
    animation-name: bounce;
  }

  @keyframes bounce {
    35%, 65% {
      scale: var(--scale);
    }
  }

  .sparkle path:nth-of-type(1) {
    --scale: 0.5;
    --delay: 0.1;
    --base: 40%;
  }

  .sparkle path:nth-of-type(2) {
    --scale: 1.5;
    --delay: 0.2;
    --base: 20%;
  }

  .sparkle path:nth-of-type(3) {
    --scale: 2.5;
    --delay: 0.35;
    --base: 30%;
  }

  .sparkle-button:before {
    content: "";
    position: absolute;
    inset: -0.2em;
    z-index: -1;
    border: 0.25em solid hsl(260 97% 50% / 0.5);
    border-radius: 100px;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
  }

  .spark {
    position: absolute;
    inset: 0;
    border-radius: 100px;
    rotate: 0deg;
    overflow: hidden;
    mask: linear-gradient(white, transparent 50%);
    animation: flip calc(var(--spark) * 2) infinite steps(2, end);
  }

  @keyframes flip {
    to {
      rotate: 360deg;
    }
  }

  .spark:before {
    content: "";
    position: absolute;
    width: 200%;
    aspect-ratio: 1;
    top: 0%;
    left: 50%;
    z-index: -1;
    translate: -50% -15%;
    rotate: 0;
    transform: rotate(-90deg);
    opacity: calc((var(--active)) + 0.4);
    background: conic-gradient(
      from 0deg,
      transparent 0 340deg,
      white 360deg
    );
    transition: opacity var(--transition);
    animation: rotate var(--spark) linear infinite both;
  }

  .spark:after {
    content: "";
    position: absolute;
    inset: var(--cut);
    border-radius: 100px;
  }

  .backdrop {
    position: absolute;
    inset: var(--cut);
    background: var(--bg);
    border-radius: 100px;
    transition: background var(--transition);
  }

  @keyframes rotate {
    to {
      transform: rotate(90deg);
    }
  }

  @supports(selector(:has(:is(+ *)))) {
    body:has(button:is(:hover, :focus-visible)) {
      --active: 1;
      --play-state: running;
    }

    .bodydrop {
      display: none;
    }
  }

  .sparkle-button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
    --active: 1;
    --play-state: runnin;
  }

  .sparkle-button:is(:hover, :focus-visible) {
    --active: 1;
    --play-state: running;
  }

  .sp {
    position: relative;
  }

  .particle-pen {
    position: absolute;
    width: 200%;
    aspect-ratio: 1;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    -webkit-mask: radial-gradient(white, transparent 65%);
    z-index: -1;
    opacity: var(--active, 0);
    transition: opacity var(--transition);
  }

  .particle {
    fill: white;
    width: calc(var(--size, 0.25) * 1rem);
    aspect-ratio: 1;
    position: absolute;
    top: calc(var(--y) * 1%);
    left: calc(var(--x) * 1%);
    opacity: var(--alpha, 1);
    animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
    transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
    z-index: -1;
    animation-play-state: var(--play-state, paused);
  }

  .particle path {
    fill: hsl(0 0% 90%);
    stroke: none;
  }

  .particle:nth-of-type(even) {
    animation-direction: reverse;
  }

  @keyframes float-out {
    to {
      rotate: 360deg;
    }
  }

  .text {
    translate: 2% -6%;
    letter-spacing: 0.01ch;
    background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
    -webkit-background-clip: text;
    color: transparent;
    transition: background var(--transition);
  }

  .sparkle-button svg {
    inline-size: 1.25em;
    translate: -25% -5%;
  }

  /* Animación flotante para el icono */
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  /* Mejorar el video móvil */
  @media (orientation: portrait) and (max-width: 768px) {
    video {
      object-fit: cover !important;
      width: 100vw !important;
      height: 100vh !important;
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
    }
  }
}
